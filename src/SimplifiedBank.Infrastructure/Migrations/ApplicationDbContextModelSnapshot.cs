// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SimplifiedBank.Infrastructure.Context;

#nullable disable

namespace SimplifiedBank.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.17")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SimplifiedBank.Domain.Entities.Transaction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("DATETIME")
                        .HasColumnName("DateCreated");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("DATETIME")
                        .HasColumnName("DateModified");

                    b.Property<Guid>("ReceiverId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ReceiverId");

                    b.Property<Guid>("SenderId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("SenderId");

                    b.Property<decimal>("Value")
                        .HasColumnType("DECIMAL(18,2)")
                        .HasColumnName("Value");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "ReceiverId" }, "IX_Transaction_ReceiverId");

                    b.HasIndex(new[] { "SenderId" }, "IX_Transaction_SenderId");

                    b.ToTable("Transactions", (string)null);
                });

            modelBuilder.Entity("SimplifiedBank.Domain.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Balance")
                        .HasColumnType("DECIMAL(18,2)")
                        .HasColumnName("Balance");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("DATETIME")
                        .HasColumnName("DateCreated");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("DATETIME")
                        .HasColumnName("DateModified");

                    b.Property<string>("Document")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("CPForCNPJ");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(160)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("Email");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("NVARCHAR")
                        .HasColumnName("FullName");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("PasswordHash");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("Type");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Document" }, "IX_User_CPForCNPJ")
                        .IsUnique();

                    b.HasIndex(new[] { "Email" }, "IX_User_Email")
                        .IsUnique();

                    b.ToTable("Users", (string)null);
                });

            modelBuilder.Entity("SimplifiedBank.Domain.Entities.Transaction", b =>
                {
                    b.HasOne("SimplifiedBank.Domain.Entities.User", "Receiver")
                        .WithMany("TransactionsReceived")
                        .HasForeignKey("ReceiverId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SimplifiedBank.Domain.Entities.User", "Sender")
                        .WithMany("TransactionsSent")
                        .HasForeignKey("SenderId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Receiver");

                    b.Navigation("Sender");
                });

            modelBuilder.Entity("SimplifiedBank.Domain.Entities.User", b =>
                {
                    b.Navigation("TransactionsReceived");

                    b.Navigation("TransactionsSent");
                });
#pragma warning restore 612, 618
        }
    }
}
